# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: tests

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Flutter action
        # You may pin to the exact commit or the version.
        # uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d
        uses: subosito/flutter-action@v2.8.0
        with:
          # The Flutter version to make available on the path
          # flutter-version: # optional, default is any
          # The Flutter build release channel
          channel: stable # optional, default is stable
          # Cache the Flutter SDK
          cache: true # optional
          # Identifier for the Flutter SDK cache
          # cache-key: # optional, default is flutter-:os:-:channel:-:version:-:arch:-:hash:
          # Flutter SDK cache path
          # cache-path: # optional, default is ${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:
          # The architecture of Flutter SDK executable (x64 or arm64)
          # architecture: # optional, default is ${{ runner.arch }}

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      # - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: flutter pub get

      # TODO
      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # TODO
      # Consider passing '--fatal-infos' for slightly stricter analysis.
      # - name: Analyze project source
      #  run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: flutter test --dart-define=CI=true --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

      - name: "Test Report"
        uses: dorny/test-reporter@v1
        if: always()
        with:
          # Name or regex of artifact containing test results
          # Regular expression must be enclosed in '/'.
          # Values from captured groups will replace occurrences of $N in report name.
          # Example:
          #   artifact: /test-results-(.*)/
          #   name: 'Test report $1'
          #   -> Artifact 'test-result-ubuntu' would create report 'Test report ubuntu'
          # artifact: /test-results-(.*)/

          # Name of the Check Run which will be created
          name: "Flutter Test Report"

          # Coma separated list of paths to test results
          # Supports wildcards via [fast-glob](https://github.com/mrmlnc/fast-glob)
          # All matched result files must be of the same format
          path: "**/test-results.json"

          # The fast-glob library that is internally used interprets backslashes as escape characters.
          # If enabled, all backslashes in provided path will be replaced by forward slashes and act as directory separators.
          # It might be useful when path input variable is composed dynamically from existing directory paths on Windows.
          path-replace-backslashes: "false"

          # Format of test results. Supported options:
          #   dart-json
          #   dotnet-trx
          #   flutter-json
          #   java-junit
          #   jest-junit
          #   mocha-json
          reporter: "flutter-json"

          # Allows you to generate only the summary.
          # If enabled, the report will contain a table listing each test results file and the number of passed, failed, and skipped tests.
          # Detailed listing of test suites and test cases will be skipped.
          only-summary: "false"

          # Limits which test suites are listed:
          #   all
          #   failed
          list-suites: "all"

          # Limits which test cases are listed:
          #   all
          #   failed
          #   none
          list-tests: "all"

          # Limits number of created annotations with error message and stack trace captured during test execution.
          # Must be less or equal to 50.
          max-annotations: "10"

          # Set action as failed if test report contains any failed test
          fail-on-error: "true"

          # Relative path under $GITHUB_WORKSPACE where the repository was checked out.
          # working-directory: ""

          # Personal access token used to interact with Github API
          # Default: ${{ github.token }}
          # token: ""
